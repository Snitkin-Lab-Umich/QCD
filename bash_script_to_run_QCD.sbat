#!/bin/bash

#SBATCH --job-name=QCD
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=youremail@umich.edu
#SBATCH --cpus-per-task=3
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --mem-per-cpu=10gb
#SBATCH --time=008:15:00
#SBATCH --account=esnitkin1
#SBATCH --partition=standard

# Load necessary modules
module load Bioinformatics
module load snakemake singularity

# Extract prefix from the YAML config file
PREFIX=$(grep '^prefix:' config/config.yaml | awk '{print $2}')

# Define the file paths dynamically
PASS_COV_FILE="results/${PREFIX}/sample_files/samples_passed_coverage.csv"
PASS_ASSEMBLY_FILE="results/${PREFIX}/sample_files/samples_passed_assembly.csv"

# Run Snakemake the first time -- until coverage
snakemake -s workflow/QCD.smk -p --use-conda --use-singularity --use-envmodules -j 999 \
    --cluster "sbatch -A {cluster.account} -p {cluster.partition} -N {cluster.nodes} -t {cluster.walltime} -c {cluster.procs} --mem-per-cpu {cluster.pmem} --output=slurm_out/slurm-%j.out" \
    --conda-frontend conda --cluster-config config/cluster.json --configfile config/config.yaml --latency-wait 1000 --nolock 

# samples_passed_coverage.csv should have been created in the Snakemake command above
# If not found, throw an error and exit
if [ ! -s "$PASS_COV_FILE" ] || [ "$(wc -l < "$PASS_COV_FILE")" -le 1 ]; then
    echo "Error: $PASS_COV_FILE is missing or does not have any samples. Exiting."
    exit 1
else
    echo "$PASS_COV_FILE detected. Running second part of the workflow."
fi

# Run Snakemake again to run the second part of the workflow --until assembly
snakemake -s workflow/QCD.smk -p --use-conda --use-singularity --use-envmodules -j 999 \
    --cluster "sbatch -A {cluster.account} -p {cluster.partition} -N {cluster.nodes} -t {cluster.walltime} -c {cluster.procs} --mem-per-cpu {cluster.pmem} --output=slurm_out/slurm-%j.out" \
    --conda-frontend conda --cluster-config config/cluster.json --configfile config/config.yaml --latency-wait 1000 --nolock 

# samples_passed_assembly.csv should have been created in the Snakemake command above
# If not found, throw an error and exit
if [ ! -s "$PASS_ASSEMBLY_FILE" ] || [ "$(wc -l < "$PASS_ASSEMBLY_FILE")" -le 1 ]; then
    echo "Error: $PASS_ASSEMBLY_FILE is missing or does not have any samples. Exiting."
    exit 1
else
    echo "$PASS_ASSEMBLY_FILE detected. Running second part of the workflow."
fi

# Run Snakemake to finish running the rest of the pipeline
snakemake -s workflow/QCD.smk -p --use-conda --use-singularity --use-envmodules -j 999 \
    --cluster "sbatch -A {cluster.account} -p {cluster.partition} -N {cluster.nodes} -t {cluster.walltime} -c {cluster.procs} --mem-per-cpu {cluster.pmem} --output=slurm_out/slurm-%j.out" \
    --conda-frontend conda --cluster-config config/cluster.json --configfile config/config.yaml --latency-wait 1000 --nolock 

# Run Snakemake for the last time to generate QC report 
snakemake -s workflow/QCD_report.smk -p --use-singularity --cores all




