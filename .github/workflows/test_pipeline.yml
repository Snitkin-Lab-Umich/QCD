name: Test QCD Pipeline
run-name: ${{ github.actor }} is testing snakemake workflow üöÄ
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Test-QCD-Pipeline:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      # - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Checkout repository
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: |
          ls
      # - name: Debug environment
      #   run: |
      #     uname -a
      #     cat /etc/os-release
      #     env
      #     ls /etc/profile.d/
      #     whoami
      #     echo $SHELL

      # - name: SSh into Actions
      #   uses: actions/checkout@v4
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # Download FASTQ files from Dropbox
      # - name: Download FASTQ files from Dropbox and copy it to local path
      #   env:
      #     DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
      #   run: |
      #     source /etc/profile.d/z11StdEnv.sh
      #     module load Bioinformatics snakemake singularity
      #     export DROPBOX_ACCESS_TOKEN=${DROPBOX_ACCESS_TOKEN}
      #     python3 download_fastqs.py

      - name: Load modules and run the pipeline
        shell: bash -l {0}
        run: |
          source /etc/profile.d/z11StdEnv.sh
          module load Bioinformatics snakemake singularity
          snakemake -s workflow/Snakefile --dryrun
          # snakemake -s workflow/Snakefile -p --use-conda --use-singularity --use-envmodules --conda-frontend conda --configfile config/config.yaml --latency-wait 1000 --nolock --cores all
